{"version":3,"sources":["components/projectCard.js","assests/projectData.js","components/projects.js","project.js","components/header.js","components/intro.js","components/experience.js","assests/skillsData.js","components/unitSkill.js","components/skills.js","components/contact.js","index.js"],"names":["ProjectCard","data","projectDetails","calc","x","y","window","innerHeight","innerWidth","useSpring","xys","config","mass","tension","friction","props","set","div","className","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","s","src","image","alt","width","height","title","description","onClick","console","log","projectData","githublink","demo","to","i","scale","rot","Math","random","delay","trans","r","Deck","useState","Set","gone","useSprings","length","from","bind","useGesture","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","undefined","size","setTimeout","clear","map","key","Card","propsPara","ParallaxLayer","offset","speed","factor","id","Header","params","React","parallax","scrollTo","Trail","open","children","items","Children","toArray","trail","useTrail","opacity","rest","Intro","state","color","fontSize","Experience","align","skillsData","UnitSkill","name","SkillName","toLowerCase","Skills","CreateSkillCard","Contact","href","animated","Stars","position","group","useRef","theta","useFrame","sin","THREE","degToRad","cos","current","rotation","useMemo","transparent","Array","fill","geo","mat","coords","ref","p1","p2","p3","geometry","material","Scene","top","mouse","Main","pages","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e480ea22.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport './projectCard.css'\r\n\r\nexport function ProjectCard(data) {\r\n  const { projectDetails } = data\r\n  const calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.5]\r\n  const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n  const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\r\n  return (\r\n    <animated.div\r\n      className=\"card\"\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n      style={{ transform: props.xys.interpolate(trans) }}\r\n    >\r\n   <img src={projectDetails.image} alt=\"Avatar\" style={{width:'100%', height: '35%'}}/>\r\n  <div style={{height: '50%'}}>\r\n    <h4><b>{projectDetails.title}</b></h4>\r\n    <p>{projectDetails.description}</p>\r\n  </div>\r\n  <div className=\"cardButton\" style={{width: '100%'}}>\r\n      <span style={{width: '45%'}}><button>Github</button></span>\r\n      <span style={{width: '10%'}}>  </span>\r\n      <span style={{width: '45%'}}><button onClick={()=> {console.log('hi')}}>Demo</button></span>\r\n    </div>\r\n    </animated.div>\r\n  )\r\n}\r\n","export const projectData = [\r\n    {\r\n        title : \"True Step\",\r\n        image : \"https://miro.medium.com/max/1120/1*puddL-ZWdhRdWj8OzP2JlQ.png\",\r\n        description : \"Truestep is location based MR surveillance system. This project is design to detect and restrict false reporting. Truestep consist of two module one is admin dashboard provides different activities and functionalities to amdin. other is for representatives which is a Android app. Technologies involved: Nodejs, Serverless, Aws, lambda, Dynamodb, Angular, Nebular, Android.\",\r\n        githublink : \"\",\r\n        demo : \"\"\r\n    },\r\n    {\r\n        title : \"True Step\",\r\n        image : \"https://miro.medium.com/max/922/1*NHouxz4boNUijJiNMmOdXw.png\",\r\n        description : \"Billing desktop app using electron and Angular framework This is a simple billing app targeted to small shops. Built using Electron - Angular and sqlite technologies. App consists of 3 modules 1 product management 2 bill creation 3 history of bill.\",\r\n        githublink : \"\",\r\n        demo : \"\"\r\n    },\r\n    {\r\n        title : \"Canteen Management System\",\r\n        image : \"https://miro.medium.com/max/922/1*NHouxz4boNUijJiNMmOdXw.png\",\r\n        description : \"Canteen Management System is a online complete solution to convert traditional token system to digital token system. It also includes different features like products management and employee management.\",\r\n        githublink : \"\",\r\n        demo : \"\"\r\n    }\r\n]","import { render } from 'react-dom'\r\nimport React, { useState } from 'react'\r\nimport { useSprings, animated, interpolate } from 'react-spring'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport { ProjectCard } from './projectCard'\r\nimport { projectData} from '../assests/projectData';\r\nimport './projects.css'\r\n// import '../styles.css'\r\n\r\n// const cards = [\r\n//   'https://upload.wikimedia.org/wikipedia/en/f/f5/RWS_Tarot_08_Strength.jpg',\r\n//   'https://upload.wikimedia.org/wikipedia/en/5/53/RWS_Tarot_16_Tower.jpg',\r\n//   'https://upload.wikimedia.org/wikipedia/en/9/9b/RWS_Tarot_07_Chariot.jpg',\r\n//   'https://upload.wikimedia.org/wikipedia/en/d/db/RWS_Tarot_06_Lovers.jpg',\r\n//   'https://upload.wikimedia.org/wikipedia/en/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\r\n//   'https://upload.wikimedia.org/wikipedia/en/d/de/RWS_Tarot_01_Magician.jpg'\r\n// ]\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = (i) => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100 })\r\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 })\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\r\n\r\nexport function Deck() {\r\n  const [gone] = useState(() => new Set()) // The set flags all the cards that are flicked out\r\n  const [props, set] = useSprings(projectData.length, (i) => ({ ...to(i), from: from(i) })) // Create a bunch of springs using the helpers above\r\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n  const bind = useGesture(({ args: [index], down, delta: [xDelta], distance, direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2 // If you flick hard enough it should trigger the card to fly out\r\n    const dir = xDir < 0 ? -1 : 1 // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index) // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n    set((i) => {\r\n      if (index !== i) return // We're only interested in changing spring-data for the current spring\r\n      const isGone = gone.has(index)\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0 // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0) // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1 // Active cards lift up a bit\r\n      return { x, rot, scale, delay: undefined, config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 } }\r\n    })\r\n    if (!down && gone.size === projectData.length) setTimeout(() => gone.clear() || set((i) => to(i)), 600)\r\n  })\r\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n  return props.map(({ x, y, rot, scale }, i) => (\r\n    <animated.div key={i} style={{ transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}>\r\n      {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n      <animated.div {...bind(i)} style={{ transform: interpolate([rot, scale], trans) }}>\r\n      <ProjectCard projectDetails = { projectData[i] } />\r\n      </animated.div>\r\n    </animated.div>\r\n  ))\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport './project.css'\r\nimport { Deck } from './components/projects';\r\n\r\n// const calc = (x, y) => {\r\n//   console.log('x is ' + x +' y is '+ y);\r\n//   return [-(y - window.innerHeight / 2) / 40, (x - window.innerWidth / 2) / 40, 2]\r\n// }\r\n// trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n\r\nexport function Card(propsPara) {\r\n  const { ParallaxLayer } = propsPara\r\n  //const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\r\n  return (\r\n    <ParallaxLayer\r\n      offset={2}\r\n      speed={1}\r\n      factor={1}>\r\n        <div id=\"deck\">\r\n          <Deck/>\r\n          </div>\r\n    </ParallaxLayer>\r\n  )\r\n}","import React from 'react'\r\nimport './header.css'\r\n\r\nexport function Header(params){\r\n    const { ParallaxLayer} = params\r\n    return (\r\n        <ParallaxLayer  offset={0} speed={-1} factor={0.1}>\r\n        <div className=\"header\" style={{width: '100%'}}>\r\n        <span><button onClick={()=> React.parallax.scrollTo(0)}>Intro</button></span>\r\n        <span><button onClick={()=> React.parallax.scrollTo(1)}>Experience</button></span>\r\n        <span><button onClick={()=> React.parallax.scrollTo(2)}>Projects</button></span>\r\n        <span><button onClick={()=> React.parallax.scrollTo(3)}>Skills</button></span>\r\n        <span><button onClick={()=> React.parallax.scrollTo(4)}>Contact</button></span>\r\n</div>\r\n</ParallaxLayer>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { useTrail, a } from 'react-spring'\r\nimport { ParallaxLayer } from 'react-spring/renderprops-addons'\r\nimport './intro.css'\r\n\r\n\r\nfunction Trail({ open, children, ...props }) {\r\n    const items = React.Children.toArray(children)\r\n    const trail = useTrail(items.length, {\r\n      config: { mass: 50, tension: 200, friction: 200 },\r\n      opacity: open ? 1 : 0,\r\n      x: open ? 0 : 20,\r\n      height: open ? 70 : 0,\r\n      from: { opacity: 0, x: 0, height: 0 },\r\n    })\r\n    return (\r\n      <div className=\"trails-main\" {...props}>\r\n          {trail.map(({ x, height, ...rest }, index) => (\r\n            <a.div\r\n              key={items[index]}\r\n              className=\"trails-text\"\r\n              style={{ ...rest, transform: x.interpolate((x) => `translate3d(0,${x}px,0)`) }}>\r\n              <a.div style={{ height }}>{items[index]}</a.div>\r\n            </a.div>\r\n          ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport function Intro(props){\r\n    const { ParallaxLayer } = props\r\n    const [open, set] = useState(true)\r\n    return (\r\n    <ParallaxLayer offset={0.3} speed={1} factor = {0.7}>\r\n    <div className=\"intro\">\r\n      <Trail open={open} onClick={() => set((state) => !state)}>\r\n        <span style={{color: 'white'}}>Hey there, I am a </span>\r\n        <span style={{fontSize: '80px'}}>Full-Stack Developer</span>\r\n        <span></span>\r\n         <span> having experience of 2 year and 3 months. While I am a proficient\r\nfullstack developer,\r\n</span>\r\n<span> my expertise is in building scalable backend services. I am looking\r\nforward to work in fun and challenging work environment.</span>\r\n      </Trail>\r\n      </div>\r\n      </ParallaxLayer>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { render } from 'react-dom'\r\nimport { useTrail, a } from 'react-spring'\r\nimport './experience.css'\r\n\r\n    function Trail({ open, children, ...props }) {\r\n    const items = React.Children.toArray(children)\r\n    const trail = useTrail(items.length, {\r\n      config: { mass: 50, tension: 200, friction: 200 },\r\n      opacity: open ? 1 : 0,\r\n      x: open ? 0 : 20,\r\n      height: open ? 70 : 0,\r\n      from: { opacity: 0, x: 0, height: 0 },\r\n    })\r\n    return (\r\n      <div className=\"trails-main\" {...props}>\r\n        <div>\r\n          {trail.map(({ x, height, ...rest }, index) => (\r\n            <a.div\r\n              key={items[index]}\r\n              className=\"trails-text\"\r\n              style={{ ...rest, transform: x.interpolate((x) => `translate3d(0,${x}px,0)`) }}>\r\n              <a.div style={{ height }}>{items[index]}</a.div>\r\n            </a.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n    export function Experience(params) {\r\n    const { ParallaxLayer } = params\r\n    const [open, set] = useState(true)\r\n    return (\r\n        <ParallaxLayer offset={1.1} speed={1} factor={0.9}>\r\n        <div className = \"experience\">\r\n        <span style={{fontSize: '80px', align: 'center', width: '100%'}}>Experience</span>\r\n        <hr style={{width: '100%'}}/>\r\n        <table className=\"table\">\r\n        <tr>\r\n    <td style={{width:\"150px\"}}>Dassault Systemes</td>\r\n    <td style={{width:\"450px\"}}>Development Engineer</td>\r\n  </tr>\r\n  <tr>\r\n    <td style={{\"vertical-align\":\"top\"}}>March,2018 - current</td>\r\n    <td style={{\"text-align\": \"left\"}}>\r\n    <ul>\r\n\t<li>successfully developed and exposed multiple web services</li>\r\n<li>written different time based scripts to manage data.</li>\r\n<li>provided the L3 support</li>\r\n<li>Written test cases and performed unit testing with REST testharness to ensure the\r\nrobustness of APIs.</li>\r\n<li>Added value to existing testing framework by writing code to generate report of testcases.</li>\r\n<li>Worked on Cached memory database(exalead) and implemented it on our application to\r\nincrease performance of application.</li>\r\n<li>Worked on multiple projects simultaneously, In my tenure in Dassault systems I worked on\r\n4 applications</li>\r\n<li>Refactored existing APIs with approaches of betterimplementation, which resulted in\r\nbooming code efficiency,quality and readability.</li>\r\n\r\n    </ul>\r\n    </td>\r\n  </tr>\r\n        </table>\r\n        {/* <span></span>\r\n         <span> having experience of 2 year and 3 months. While I am a proficient\r\nfullstack developer,\r\n</span>\r\n<span> my expertise is in building scalable backend services. I am looking\r\nforward to work in fun and challenging work environment.</span> */}\r\n        </div> \r\n        </ParallaxLayer>\r\n    )\r\n}","\r\nexport const skillsData = [\r\n    \"Java\",\r\n    \"Angular\",\r\n    \"NodeJs\",\r\n    \"Javascript\",\r\n    \"HTML\",\r\n    \"CSS\",\r\n    \"ReactJs\",\r\n    \"Electron\",\r\n    \"SpringBoot\",\r\n    \"MongoDB\",\r\n    \"Git\",\r\n    \"AWS\",\r\n    \"Docker\"\r\n]","import React from 'react'\r\nimport './unitSkill.css'\r\n\r\nconst assertUrl = (name) => `./svg/${name.toLowerCase()}.svg`\r\nexport function UnitSkill(props){\r\n\r\n    const { SkillName } = props\r\n    console.log(SkillName)\r\n    return (\r\n        <div className=\"unitSkill\">\r\n            <img src={assertUrl(SkillName)} alt={SkillName} />\r\n            <label>{SkillName}</label>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { skillsData } from '../assests/skillsData'\r\nimport './skills.css'\r\nimport { UnitSkill } from './unitSkill'\r\n\r\nexport function Skills(props){\r\n    console.log(skillsData.length)\r\n    const { ParallaxLayer } = props\r\n    return (\r\n        <ParallaxLayer offset={3.3} speed={1} factor={0.7}>\r\n        <div className=\"skills\">\r\n            {/* <span style={{fontSize: '60px', align: 'center'}}>Skills</span> */}\r\n            <CreateSkillCard/>\r\n        </div>\r\n        </ParallaxLayer>\r\n    )\r\n}\r\n\r\nfunction CreateSkillCard(){\r\n    return skillsData.map(i =>(\r\n        // <div>\r\n        //     <span>{skillsData[i]}</span>\r\n        // </div>\r\n        <UnitSkill SkillName={i}></UnitSkill>\r\n    ))\r\n}","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport './contact.css'\r\n\r\nexport function Contact(props){\r\n    const { ParallaxLayer } = props\r\n    return (\r\n        <ParallaxLayer offset={4.2} speed={1} factor={0.9}>\r\n        <div className=\"contact\">\r\n        <span style={{fontSize: '80px', width:\"100%\"}}>Contact Me</span>\r\n        <hr style={{ width:\"100%\"}}/>\r\n        <ul style={{'list-style-type':'none'}}>\r\n            <li><a href=\"https://www.github.com/SharimNaveed\">Github</a></li>\r\n            <li><a href=\"https://www.linkedin.com/in/sharimnaveed/\">LinkedIn</a></li>\r\n            <li>sharimnavid@gmail.com</li>\r\n        </ul>\r\n        </div>\r\n        </ParallaxLayer>\r\n    )\r\n}","\nimport ReactDOM from 'react-dom'\nimport * as THREE from 'three/src/Three'\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react'\n// A THREE.js React renderer, see: https://github.com/drcmda/react-three-fiber\nimport { extend as applyThree, Canvas, useFrame, useThree } from 'react-three-fiber'\n// A React animation lib, see: https://github.com/react-spring/react-spring\nimport { apply as applySpring, useSpring, a, interpolate } from 'react-spring/three'\nimport { useSpring as moreSpring, animated } from 'react-spring'\n// import data from './data'\nimport './styles.css'\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons'\nimport { Card } from './project';\nimport { Deck } from './components/projects';\nimport { Header } from './components/header'\nimport { fill } from 'lodash-es'\nimport { Intro } from './components/intro'\nimport { Experience } from './components/experience'\nimport { Skills } from './components/skills'\nimport { Contact } from './components/contact'\n\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n\n/** This component rotates a bunch of stars */\nfunction Stars({ position }) {\n  let group = useRef()\n  let theta = 0\n  useFrame(() => {\n    const r = 5 * Math.sin(THREE.Math.degToRad((theta += 0.01)))\n    const s = Math.cos(THREE.Math.degToRad(theta * 2))\n    group.current.rotation.set(r, r, r)\n    group.current.scale.set(s, s, s)\n  })\n  const [geo, mat, coords] = useMemo(() => {\n    const geo = new THREE.SphereBufferGeometry(0.1,10,10)\n    const mat = new THREE.MeshBasicMaterial({ color: new THREE.Color('peachpuff'), transparent: true })\n    const coords = new Array(30000).fill().map(i => [Math.random() * 800 - 400, Math.random() * 800 - 400, Math.random() * 800 - 400])\n    return [geo, mat, coords]\n  }, [])\n  return (\n    <a.group ref={group} position={position}>\n      {coords.map(([p1, p2, p3], i) => (\n        <mesh key={i} geometry={geo} material={mat} position={[p1, p2, p3]} />\n      ))}\n    </a.group>\n  )\n}\n\nfunction Welcome() {\n  const [open, toggle] = useState(false)\n  const { freq, scale, transform, opacity } = moreSpring({\n    reverse: open,\n    from: { scale: 10, opacity: 0, transform: 'scale(0.9)', freq: '0.0175, 0.0' },\n    to: { scale: 150, opacity: 1, transform: 'scale(1)', freq: '0.0, 0.0' },\n    config: { duration: 3000 }\n  })\n\n  return (\n    <div onClick={() => toggle(!open)} id=\"welcome\">\n      <animated.svg style={{ transform, opacity }} viewBox=\"0 0 1278 446\">\n        <defs>\n          <filter id=\"water\">\n            <AnimFeTurbulence type=\"fractalNoise\" baseFrequency={freq} numOctaves=\"1.5\" result=\"TURB\" seed=\"8\" />\n            <AnimFeDisplacementMap xChannelSelector=\"R\" yChannelSelector=\"G\" in=\"SourceGraphic\" in2=\"TURB\" result=\"DISP\" scale={scale} />\n          </filter>\n        </defs>\n        <g filter=\"url(#water)\">\n          <animated.path\n            d=\"M179.53551,113.735463 C239.115435,113.735463 292.796357,157.388081 292.796357,245.873118 L292.796357,415.764388 L198.412318,415.764388 L198.412318,255.311521 C198.412318,208.119502 171.866807,198.681098 151.220299,198.681098 C131.753591,198.681098 94.5898754,211.658904 94.5898754,264.749925 L94.5898754,415.764388 L0.205836552,415.764388 L0.205836552,0.474616471 L94.5898754,0.474616471 L94.5898754,151.489079 C114.646484,127.893069 145.321296,113.735463 179.53551,113.735463 Z M627.269795,269.469127 C627.269795,275.95803 626.679895,285.396434 626.089994,293.065137 L424.344111,293.065137 C432.012815,320.790448 457.378525,340.257156 496.901841,340.257156 C520.497851,340.257156 554.712065,333.768254 582.437376,322.560149 L608.392987,397.47748 C608.392987,397.47748 567.09997,425.202792 494.54224,425.202792 C376.562192,425.202792 325.240871,354.414762 325.240871,269.469127 C325.240871,183.343692 377.152092,113.735463 480.974535,113.735463 C574.178773,113.735463 627.269795,171.545687 627.269795,269.469127 Z M424.344111,236.434714 L528.166554,236.434714 C528.166554,216.378105 511.649347,189.242694 476.255333,189.242694 C446.17042,189.242694 424.344111,216.378105 424.344111,236.434714 Z M659.714308,0.474616471 L754.098347,0.474616471 L754.098347,415.764388 L659.714308,415.764388 L659.714308,0.474616471 Z M810.13887,0.474616471 L904.522909,0.474616471 L904.522909,415.764388 L810.13887,415.764388 L810.13887,0.474616471 Z M1097.42029,113.735463 C1191.80433,113.735463 1257.87315,183.343692 1257.87315,269.469127 C1257.87315,355.594563 1192.98413,425.202792 1097.42029,425.202792 C997.727148,425.202792 936.967423,355.594563 936.967423,269.469127 C936.967423,183.343692 996.547347,113.735463 1097.42029,113.735463 Z M1097.42029,340.257156 C1133.9941,340.257156 1163.48912,308.402543 1163.48912,269.469127 C1163.48912,230.535711 1133.9941,198.681098 1097.42029,198.681098 C1060.84647,198.681098 1031.35146,230.535711 1031.35146,269.469127 C1031.35146,308.402543 1060.84647,340.257156 1097.42029,340.257156 Z\"\n            fill=\"lightblue\"\n          />\n        </g>\n      </animated.svg>\n    </div>\n  )\n}\n\n/** This component maintains the scene */\nfunction Scene({ top, mouse }) {\n  // const { size } = useThree()\n  // const scrollMax = size.height * 4.5\n  return (\n    <>\n      {/* <a.spotLight intensity={1.2} color=\"white\" position={mouse.interpolate((x, y) => [x / 100, -y / 100, 6.5])} /> */}\n      {/* <Effects factor={top.interpolate([0, 150], [1, 0])} /> */}\n      {/* <Background color={top.interpolate([0, scrollMax * 0.25, scrollMax * 0.8, scrollMax], ['#27282F', '#247BA0', '#70C1B3', '#f8f3f1'])} /> */}\n      <Stars position={top.interpolate(top => [0, -1 + top / 20, 0])} />\n      {/* <Images top={top} mouse={mouse} scrollMax={scrollMax} />\n      <Text opacity={top.interpolate([0, 200], [1, 0])} position={top.interpolate(top => [0, -1 + top / 200, 0])}>\n        lorem\n      </Text>\n      <Text position={top.interpolate(top => [0, -20 + ((top * 10) / scrollMax) * 2, 0])} color=\"black\" fontSize={150}>\n        Ipsum\n      </Text> */}\n    </>\n  )\n}\n\n/** Main component */\nexport default function Main() {\n  // This tiny spring right here controlls all(!) the animations, one for scroll, the other for mouse movement ...\n  const [{ top, mouse }] = useSpring(() => ({ top: 0, mouse: [0, 0] }))\n  const parallax = useRef();\n\n  // const onMouseMove = useCallback(({ clientX: x, clientY: y }) => set({ mouse: [x - window.innerWidth / 2, y - window.innerHeight / 2] }), [])\n  // const onScroll = useCallback(e => set({ top: e.target.scrollTop }), [])\n  return (\n     <>\n    {/* <Canvas className=\"canvas\">\n      <Scene top={top} mouse={mouse} />\n    </Canvas> */}\n    {/* <Deck /> */}\n    {/* <Intro></Intro> */}\n    {/* <span style={{width: '45%', 'pointer-events': fill}}><button onClick={()=> {console.log('hi')}}>Demo</button></span> */}\n          <Parallax  ref={ref => (React.parallax = ref)} pages={5}>\n     {/* <ParallaxLayer offset={0} speed={1} factor={1} style={{ backgroundColor: '#000000' }} />\n    <ParallaxLayer offset={1} speed={1} factor={1} style={{ backgroundColor: '#333333' }} />\n    <ParallaxLayer offset={2} speed={1} factor={1} style={{ backgroundColor: '#555555' }} />\n    <ParallaxLayer offset={3} speed={1} factor={1} style={{ backgroundColor: '#777777' }} />\n    <ParallaxLayer offset={4} speed={1} factor={1} style={{ backgroundColor: '#999999' }} /> */}\n\n     <ParallaxLayer offset={0} speed={0} factor={5}>\n     <Canvas className=\"canvas\">\n      <Scene top={top} mouse={mouse} />\n    </Canvas>\n    </ParallaxLayer>\n\n    <Header ParallaxLayer={ParallaxLayer} />\n    <Intro ParallaxLayer={ParallaxLayer} parallax={parallax} />\n    <Experience ParallaxLayer={ParallaxLayer} parallax={parallax} />\n    <Card ParallaxLayer={ParallaxLayer} parallax={parallax} />\n       <Skills ParallaxLayer={ParallaxLayer} parallax={parallax} />\n       <Contact ParallaxLayer={ParallaxLayer} parallax={parallax} />\n      </Parallax>\n      </>\n    //   {/* <Canvas className=\"canvas\">\n    //   <Parallax ref={(ref) => (this.parallax = ref)} pages={3}>\n    //   <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#805E73' }} />\n    //  <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87BCDE' }} />\n\n    //     <Scene top={top} mouse={mouse} />\n    //   </Parallax>\n    //   </Canvas> */}\n    //   {/* <div className=\"scroll-container\" onScroll={onScroll} onMouseMove={onMouseMove}>\n    //     <div style={{ height: '525vh' }} />\n    //   </div> */}\n    // // </>\n  )\n}\n\nReactDOM.render(<Main />, document.getElementById('root'))\n"],"sourceRoot":""}